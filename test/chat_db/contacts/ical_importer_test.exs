defmodule ChatDB.Contacts.ICalImporterTest do
  @moduledoc false

  use ExUnit.Case, async: true
  import Support.Factory

  alias ChatDB.Config

  alias ChatDB.Contacts.ICalImporter

  @config Config.read()

  @jcard_no_photo [
    "vcard",
    [
      [
        "version",
        %{},
        "text",
        "3.0"
      ],
      [
        "prodid",
        %{},
        "text",
        "-//Apple Inc.//Mac OS X 10.13.6//EN"
      ],
      [
        "n",
        %{},
        "text",
        [
          "Updegrave",
          "Cody",
          "",
          "",
          ""
        ]
      ],
      [
        "fn",
        %{},
        "text",
        " Cody  Updegrave "
      ],
      [
        "tel",
        %{
          type: [
            "HOME",
            "VOICE",
            "pref"
          ]
        },
        "phone-number",
        "(301)Â 904-5644"
      ]
    ],
    []
  ]

  @jcard_with_photo [
    "vcard",
    [
      [
        "version",
        %{},
        "text",
        "3.0"
      ],
      [
        "prodid",
        %{},
        "text",
        "-//Apple Inc.//Mac OS X 10.13.6//EN"
      ],
      [
        "n",
        %{},
        "text",
        [
          "Stafford",
          "Bethany",
          "",
          "",
          ""
        ]
      ],
      [
        "fn",
        %{},
        "text",
        " Bethany  Stafford "
      ],
      [
        "tel",
        %{
          type: [
            "CELL",
            "VOICE",
            "pref"
          ]
        },
        "phone-number",
        "+16464381825"
      ],
      [
        "x-socialprofile",
        %{
          type: "facebook",
          "x-userid": "9016070",
          "x-displayname": "Bethany Stafford"
        },
        "unknown",
        "http://www.facebook.com/BStaff"
      ],
      [
        "x-socialprofile",
        %{
          type: "twitter",
          "x-userid": "887586083336323073",
          "x-displayname": "PublishedVoiceLLC"
        },
        "unknown",
        "http://twitter.com/llc_voice"
      ],
      [
        "photo",
        %{
          type: "JPEG",
          encoding: "BASE64"
        },
        "binary",
        ""
      ]
    ],
    []
  ]

  @contact_no_photo %{
    addresses: [],
    cal_uris: [],
    emails: [],
    fullname: %{params: %{}, type: "text", value: " Cody  Updegrave "},
    identifier_name: "Cody  Updegrave",
    identifier_number: "(301)Â 904-5644",
    identifier_numbers: ["3019045644"],
    impps: [],
    initials: "CU",
    name: %{params: %{}, type: "text", value: ["Updegrave", "Cody", "", "", ""]},
    phone_numbers: [
      %{
        params: %{type: ["HOME", "VOICE", "pref"]},
        type: "phone-number",
        value: "(301)Â 904-5644"
      }
    ],
    photos: [],
    social_profiles: [],
    urls: [],
    x_abadr: []
  }

  @contact_with_photo %{
    addresses: [],
    cal_uris: [],
    emails: [],
    fullname: %{params: %{}, type: "text", value: " Bethany  Stafford "},
    identifier_name: "Bethany  Stafford",
    identifier_number: "+16464381825",
    identifier_numbers: ["6464381825"],
    impps: [],
    initials: "BS",
    name: %{params: %{}, type: "text", value: ["Stafford", "Bethany", "", "", ""]},
    phone_numbers: [
      %{
        params: %{type: ["CELL", "VOICE", "pref"]},
        type: "phone-number",
        value: "+16464381825"
      }
    ],
    photos: [
      %{
        params: %{encoding: "BASE64", type: "JPEG"},
        type: "binary",
        value:
          ""
      }
    ],
    social_profiles: [],
    urls: [],
    "x-socialprofile": %{
      params: %{
        type: "twitter",
        "x-displayname": "PublishedVoiceLLC",
        "x-userid": "887586083336323073"
      },
      type: "unknown",
      value: "http://twitter.com/llc_voice"
    },
    x_abadr: []
  }

  describe ".import_contacts/1" do
    test "with valid chat" do
      # assert ICalImporter.import_contacts(@config) == []
    end
  end

  describe ".cast_contacts/1" do
    test "with empty jcards" do
      jcards = []
      assert ICalImporter.cast_contacts(jcards) == []
    end

    test "with valid jcard without photo" do
      jcard = @jcard_no_photo
      assert [contact] = ICalImporter.cast_contacts([jcard])
      assert contact == @contact_no_photo
    end

    test "with valid jcard with photo" do
      jcard = @jcard_with_photo

      assert [contact] = ICalImporter.cast_contacts([jcard])
      assert contact == @contact_with_photo
    end

    # test "with valid jcards" do
    #   assert {:ok, jcards} = ICalImporter.read_json(@config.exported_jcards_filename)
    #   assert ICalImporter.cast_contacts(jcards) == []
    # end
  end

  describe ".persist/1" do
    test "with valid jcards" do
      # assert ICalImporter.persist(@config) == []
    end
  end

  describe ".transform/1" do
    test "with valid paths" do
      import_path = @config.exported_vcards_filename
      export_path = @config.exported_jcards_filename

      assert File.exists?(import_path)
      # File.rm_rf!(export_path)
      # refute File.exists?(export_path)
      assert ICalImporter.transform(import_path, export_path) == :ok
      assert File.exists?(export_path)
    end
  end

  describe ".read_json/1" do
    test "with valid path and json" do
      path = @config.exported_jcards_filename
      assert {:ok, _json} = ICalImporter.read_json(path)
    end

    test "with valid path but not valid json" do
      path = @config.exported_vcards_filename
      assert {:error, %Jason.DecodeError{}} = ICalImporter.read_json(path)
    end

    test "with invalid path" do
      path = "invalid"
      assert {:error, :enoent} = ICalImporter.read_json(path)
    end
  end
end
